name: mac-actions-workflow
on: 
  push: 
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      
jobs:
  xcode:
    runs-on: macos-latest
    steps:
      
#       - name: Do cache
#         id: my-cache
#         uses: actions/cache@v3
#         with:
#           path: dir-i-need-to-cache
#           key: my-cache-key

#       - name: This step is cached
#         if: steps.my-cache.outputs.cache-hit != 'true'
#         run: mkdir -p ./dir-i-need-to-cache && echo random-string > ./dir-i-need-to-cache/random-file-name.txt && echo "hi from cached step"
      
#      - run: brew install --cask anydesk
      - run: brew install --cask teamviewer

#       - name: download and mount
#         run: aria2c https://google.com/dl/chrome-remote-desktop/chromeremotedesktophost-47.0.2526.18.dmg && hdiutil attach chromeremotedesktophost-47.0.2526.18.dmg
        
#       - name: install
#         run: cd "/Volumes/Chrome Remote Desktop Host 47.0.2526.18" && ls && sudo installer -pkg "Chrome Remote Desktop Host.pkg" -target /
        
#       - name: download and mount
#         run: aria2c https://download.anydesk.com/anydesk.dmg && hdiutil attach anydesk.dmg

#       - name: install
#         run: cd /Volumes/AnyDesk && ls && sudo cp -rf /Volumes/AnyDesk/AnyDesk.app /Applications
        
#      - run: sudo /Applications/AnyDesk.app/Contents/MacOS/AnyDesk &
      # - run: nohup /Applications/TeamViewer.app/Contents/MacOS/TeamViewer_Service -Module Full > TeamViewer.log 2>&1 &
      
      - run: /Applications/TeamViewer.app/Contents/MacOS/TeamViewer
      
      - run: osascript -e 'tell application "TeamViewer" to activate'
      
      
#       - name: run
#         run: sudo echo qwerty123 | sudo /Applications/AnyDesk.app/Contents/MacOS/AnyDesk --set-password &
        
      - run: screencapture ~/Desktop/picture.png # sudo /Applications/AnyDesk.app/Contents/MacOS/AnyDesk --get-id
        
#       - if: steps.my-cache.outputs.cache-hit != 'true'
#         run: launchctl start org.chromium.chromoting
      
#       - if: steps.my-cache.outputs.cache-hit != 'true'
#         run: launchctl bootout user/$(id -u "runner")
        
#       - run: cd /Applications && ls
      
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "~/Desktop/picture.png"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
